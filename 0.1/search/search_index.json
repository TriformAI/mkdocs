{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"404/","title":"Page not found","text":"<p>The page you\u2019re looking for doesn\u2019t exist or moved.</p> <ul> <li>Go to the Welcome</li> <li>Try the search bar above</li> </ul>"},{"location":"changelog/","title":"Changelog\\n\\n- Initial skeleton created.","text":""},{"location":"glossary/","title":"Glossary","text":"<p>Top-level \u2014 Components (Agents/Flows) in a Project that can be exposed. Toolbox \u2014 Non-connected tools inside an Agent. Parallel \u2014 Execute a list of inputs concurrently. Execute \u2014 Run the selected component with a JSON payload. Deploy \u2014 Snapshot current state for reproducible execution.</p>"},{"location":"roadmap/","title":"Roadmap\\n\\n- Outline upcoming features and timelines.","text":""},{"location":"admin/accounts/","title":"Accounts (coming soon)","text":"<p>This area will cover account-level settings when available.</p>"},{"location":"admin/auth/","title":"Auth","text":"<p>Login with Discord or GitHub. Use Profile \u2192 Log out to end the session.</p>"},{"location":"admin/organizations/","title":"Organizations","text":"<p>Create orgs, set active org, invite members, view membership.</p>"},{"location":"concepts/canvas/","title":"Concept: Canvas &amp; context","text":"<p>Click to select, double-click to open, right-click for context menu. Agent view shows a Toolbox; Flow view shows nodes and edges.</p>"},{"location":"concepts/deployment/","title":"Concept: Deployment model","text":"<p>Deploy creates an immutable snapshot of your project state for reproducible runs.</p>"},{"location":"concepts/execution/","title":"Concept: Execution model","text":"<p>The Execute panel runs the active component with an editable JSON payload.</p>"},{"location":"concepts/io/","title":"Concept: Inputs, Outputs, Types","text":"<p>Inputs/outputs can be typed and have defaults. Parallel toggles list fan-out execution.</p>"},{"location":"concepts/mental-model/","title":"Concept: Triform mental model","text":"<p>Projects contain Top-level components (Agents or Flows). Agents, Flows, and Actions can nest. Only top-levels are exposable.</p>"},{"location":"how-to/constraints/","title":"How-to: Refine with constraints","text":"<p>Examples: model choice, timeouts, retries, required output schema, logging level.</p>"},{"location":"how-to/deploy/","title":"How-to: Deploy changes","text":"<p>Deploy snapshots the current state. The button appears when working state differs from deployed state.</p>"},{"location":"how-to/expose-components/","title":"How-to: Expose components","text":"<p>Only Top-level components in a Project can be exposed. Choose API or schedule in Execute.</p>"},{"location":"how-to/iterate-revert/","title":"How-to: Iterate &amp; revert","text":"<p>Duplicate components before big changes. Use Deploy snapshots for safe roll-forward.</p>"},{"location":"how-to/triton-chat/","title":"How-to: Use Triton well","text":"<ul> <li>Use @ to give context (e.g., <code>@FetchAndExtractH1</code>).</li> <li>Ask for a plan first, then say Apply.</li> <li>Ask: \u201cshow the diff before applying.\u201d</li> </ul>"},{"location":"how-to/troubleshoot/","title":"How-to: Troubleshoot runs","text":"<p>Common issues: missing variables, IO type mismatches, Parallel fan-out expectations.</p>"},{"location":"patterns/contract-first/","title":"Pattern: Contract-first outputs","text":"<p>Provide a JSON schema and require Triton to validate outputs against it.</p>"},{"location":"patterns/debug-explain/","title":"Pattern: Debug &amp; explain","text":"<p>Ask Triton to explain failures, add logging, and surface intermediate artifacts.</p>"},{"location":"patterns/flow-compose/","title":"Pattern: Flow composition","text":"<p>Fan-out in Parallel and re-join with aggregated results (e.g., list of {id, status}).</p>"},{"location":"patterns/guardrails/","title":"Pattern: Guardrails","text":"<p>Use timeouts, retries, validation, and limits to keep runs predictable.</p>"},{"location":"patterns/plan-confirm-build/","title":"Pattern: Plan \u2192 Confirm \u2192 Build","text":"<p>Ask for a plan, confirm, then apply. This reduces unintended structure changes.</p>"},{"location":"patterns/toolboxing/","title":"Pattern: Toolboxing","text":"<p>Create reusable Actions with clear inputs/outputs and docstrings; reuse in Agents and Flows.</p>"},{"location":"quickstarts/describe-build/","title":"Quickstart: Describe &amp; build your first thing titles, and returns JSON { url, titles[] }. Create a reusable Action <code>FetchAndExtractH1</code>. Add a Flow to process a list in Parallel and aggregate results.  <p>Then click Apply, Run, and Deploy.</p>","text":"<p>Paste this in Chat:</p> <p>Build an agent that fetches a URL, extracts all"},{"location":"quickstarts/expose/","title":"Quickstart: Expose as API or schedule","text":"<p>Mark a Top-level component in the Project view and create an API key. Test with <code>curl</code>. Schedules run the same top-level entry on a cadence.</p>"},{"location":"quickstarts/variables/","title":"Quickstart: Add data &amp; variables","text":"<p>Use Global \u2192 Variables in the Properties Panel to define secrets and defaults without editing code.</p>"},{"location":"reference/api/","title":"API Reference","text":"<p>Top-level components map to endpoints. Include API key, request JSON payload, and read JSON response.</p>"},{"location":"reference/chat/","title":"Reference: Chat (Triton)","text":"<p>@-mention components, request plans and diffs, see system updates while Triton edits your project.</p>"},{"location":"reference/payloads/","title":"JSON Payloads","text":"<p>Conventions and examples for Execute and API calls.</p>"},{"location":"reference/properties/","title":"Reference: Properties Panel","text":"<p>Sections: Global \u2192 Variables, Components \u2192 Definition/Information, Content, Execute, Input/Output.</p>"},{"location":"reference/scheduling/","title":"Scheduling","text":"<p>Run a top-level component on a cadence; manage/disable schedules from the Project.</p>"},{"location":"reference/topbar/","title":"Reference: Top Bar","text":"<p>Home (logo), Breadcrumbs navigation, Profile menu (Organization / Account / Log out), Deploy button (visible when changes are pending).</p>"},{"location":"reference/components/action/","title":"Component: Action","text":"<p>Executable code unit. Define inputs/outputs; used by Agents/Flows.</p>"},{"location":"reference/components/agent/","title":"Component: Agent","text":"<p>Has a Toolbox of Actions/Agents/Flows it can call; contains model configuration.</p>"},{"location":"reference/components/flow/","title":"Component: Flow","text":"<p>Nodes and edges with mandatory Input and Output nodes; supports Parallel fan-out.</p>"},{"location":"reference/components/project/","title":"Component: Project","text":"<p>Top-level container. Only top-level components (Agents/Flows) are exposable via API/Schedule.</p>"}]}